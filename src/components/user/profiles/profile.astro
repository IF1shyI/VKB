<div class="account-container">
  <div class="settings-container">
    <!-- Inställningar -->
    <section class="settings">
      <h2>Inställningar</h2>
      <form id="settings-form">
        <div class="form-group">
          <label for="first-name">Förnamn</label>
          <input type="text" id="first-name" value="" />
        </div>
        <div class="form-group">
          <label for="last-name">Efternamn</label>
          <input type="text" id="last-name" value="" />
        </div>
        <div class="form-group">
          <label for="username">Användarnamn</label>
          <input type="text" id="username" value="" />
        </div>
        <div class="form-group">
          <label for="email">Primär e-post</label>
          <input type="email" id="email" value="" readonly />
        </div>
        <div class="form-actions">
          <button type="button" class="save-btn">Spara inställningar</button>
          <button type="button" class="reset-btn">Återställ lösenord</button>
        </div>
      </form>
    </section>

    <!-- Profilbild -->
    <section class="profile-picture">
      <h2>Profilbild</h2>
      <div class="profile">
        <div class="avatar">
          <a href=""><img src="./bilder/no-picture.svg" alt="" /></a>
        </div>
        <p id="picture_username"></p>
        <a href="#" class="change-picture">Byt profilbild</a>
      </div>
    </section>
  </div>

  <div id="warning-container" class="warning-container">
    <div class="warning-content">
      <h3>Varning</h3>
      <p>
        Ditt användarnamn kommer att ändras och inloggningsdetaljerna kommer att
        uppdateras. (Du kommer loggas ut)
      </p>
      <p>Det nya användarnamnet kommer vara:</p>
      <p id="newusername"></p>
      <button id="confirm-change">Bekräfta</button>
      <button id="cancel-change">Avbryt</button>
    </div>
  </div>
  <!-- E-post
  <section class="email-settings">
    <h2>E-post</h2>
    <table>
      <tr>
        <th>E-post</th>
        <th>Källa</th>
        <th>Verifierad</th>
        <th>Status</th>
      </tr>
      <tr>
        <td>arvid.alund@gmail.com</td>
        <td>Google</td>
        <td>2021-07-20 11:18</td>
        <td>Primär</td>
      </tr>
    </table>
    <button class="add-email-btn">Lägg till ny e-postadress</button>
  </section> -->

  <!-- Nyhetsbrev -->
  <section class="newsletter">
    <h2>Nyhetsbrev</h2>
    <div class="form-group">
      <input type="checkbox" id="newsletter" checked />
      <label for="newsletter">Jag vill få VKBilen's nyhetsbrev</label>
    </div>
  </section>
</div>

<script type="module" is:inline>
  import { getinfo } from "/js/user/profile/getinfo.js";
  import { updatedata } from "/js/user/profile/updateinfo.js";

  document.addEventListener("DOMContentLoaded", async function () {
    const firstname = document.getElementById("first-name");
    const lastname = document.getElementById("last-name");
    const username = document.getElementById("username");
    const email = document.getElementById("email");
    const picture_username = document.getElementById("picture_username");
    let firstnamedata = "";
    let lastnamedata = "";
    try {
      const data = await getinfo();
      if (data["firstname"]) {
        firstnamedata = data["firstname"];
      }
      if (data["lastname"]) {
        lastnamedata = data["lastname"];
      }

      firstname.value = firstnamedata;
      lastname.value = lastnamedata;
      username.value = data["name"];
      email.value = data["email"];
      picture_username.textContent = data["name"];
    } catch (error) {
      console.error("Fel vid hämtning av användarens nivå:", error);
    }

    const form = document.getElementById("settings-form");
    const warningContainer = document.getElementById("warning-container");
    const confirmButton = document.getElementById("confirm-change");
    const cancelButton = document.getElementById("cancel-change");
    const saveButton = document.querySelector(".save-btn");
    const newusername = document.getElementById("newusername");

    let newUsername = "";

    if (!form) {
      console.error("Formuläret med id 'settings-form' hittades inte.");
      return;
    }

    const changedData = {}; // Object for storing changed inputs

    // Lyssna på ändringar i alla inputfält
    form.addEventListener("input", (event) => {
      const target = event.target;

      // Om det är en input-fält och inte readonly
      if (target.tagName.toLowerCase() === "input" && !target.readOnly) {
        changedData[target.id] = target.value;
      }
    });

    // Lyssna på inputförändringar för användarnamn
    const usernameInput = document.getElementById("username");

    usernameInput.addEventListener("input", () => {
      newUsername = usernameInput.value;
    });

    // Spara inställningar
    saveButton.addEventListener("click", () => {
      // Om användarnamnet har ändrats, visa varningskontainern
      if (newUsername && newUsername !== usernameInput.defaultValue) {
        newusername.textContent = newUsername;
        warningContainer.style.display = "block"; // Visa varning
      } else {
        // Spara direkt om användarnamnet inte ändrats
        console.log("Sparar inställningar...");
        updatedata(changedData);
        // Lägg till kod för att spara inställningarna (skicka till server eller lokal lagring)
      }
    });

    // Bekräfta förändring av användarnamn
    confirmButton.addEventListener("click", () => {
      // Gör ändringen
      console.log("Användarnamn ändrat till:", newUsername);
      updatedata(changedData);
      // Lägg till kod för att uppdatera användarnamnet på servern eller där det behövs
      // Dölja varningskontainern
      warningContainer.style.display = "none";
    });

    // Avbryt ändringen
    cancelButton.addEventListener("click", () => {
      // Dölja varningskontainern utan att göra några ändringar
      warningContainer.style.display = "none";
    });
  });
</script>

<style>
  .account-container {
    max-width: 100vw;
    margin: 0 auto;
    font-family: Arial, sans-serif;
    color: white;
  }

  h1 {
    text-align: center;
    margin-bottom: 20px;
  }

  .settings-container {
    display: flex;
    justify-content: space-between;
  }

  .settings,
  .profile-picture {
    flex: 1;
    margin-right: 20px;
  }

  .profile-picture {
    text-align: center;
    width: 100px;
    margin: 0 auto;
  }

  .profile {
  }

  .avatar {
    position: relative;
    height: 300px;
    aspect-ratio: 1;
    margin: 0 auto;
    img {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
    }
  }

  .profile-picture p {
    font-weight: bold;
  }

  .change-picture {
    color: orange;
    text-decoration: none;
    font-size: 14px;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .form-group {
    display: flex;
    flex-direction: column;
    margin-top: var(--margin-s);
  }

  input[type="text"],
  input[type="email"] {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  input[readonly] {
    background-color: #f9f9f9;
  }

  .form-actions {
    display: flex;
    gap: 10px;
    margin-top: 10px;
  }

  .save-btn {
    background-color: orange;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }

  .reset-btn {
    background-color: white;
    color: black;
    border: 1px solid #ccc;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }

  .email-settings table {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
  }

  .email-settings th,
  .email-settings td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
  }

  .add-email-btn {
    background-color: orange;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }

  .newsletter {
    margin-top: 20px;
  }

  .newsletter .form-group {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .newsletter input[type="checkbox"] {
    width: 20px;
    height: 20px;
  }

  .warning-container {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 1);
    color: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
    z-index: 1000;
  }

  .warning-content {
    text-align: center;
  }

  .warning-container button {
    background-color: #ff4e4e;
    color: white;
    border: none;
    padding: 10px;
    margin: 10px;
    cursor: pointer;
    border-radius: 5px;
  }

  .warning-container button:hover {
    background-color: #ff1a1a;
  }

  #confirm-change {
    background-color: #4caf50;
  }

  #confirm-change:hover {
    background-color: #45a049;
  }

  #cancel-change {
    background-color: #f44336;
  }

  #cancel-change:hover {
    background-color: #e53935;
  }

  h3 {
    color: #f44336;
  }

  #newusername {
    font-size: 2rem;
  }
</style>
