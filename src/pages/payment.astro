---
import Layout from "../layouts/Layout.astro";
import Header from "../components/all/header.astro";
---

<script src="https://js.stripe.com/v3/"></script>

<Layout title="Betala">
  <Header />
  <div class="container">
    <h1>Färdigställ betalning</h1>
    <h3>Plan: <span id="tier-name">[Vald Plan]</span></h3>
    <div class="summary">
      <p>
        <strong>Pris:</strong>
        <span id="tier-price">[Pris]</span> SEK/månaden
      </p>
      <p>
        <strong>Beskrivning:</strong> Tillgång till valda tjänster och förmåner.
      </p>
    </div>

    <!-- Betalningsinformation -->
    <h3>Betalningsinformation</h3>
    <div class="form-group">
      <label for="name-input">Namn:</label>
      <input
        type="text"
        id="name-input"
        class="form-control"
        placeholder="John Doe"
        required
      />
      <label for="email">E-postadress:</label>
      <input
        type="email"
        id="email"
        class="form-control"
        placeholder="Ange din e-postadress"
        required
      />
      <form>
        <!-- Faktureringsadress -->
        <label for="address-line1">Adress:</label>
        <input
          type="text"
          id="address-line1"
          class="form-control"
          placeholder="Gatuadress"
          required
        />
        <label for="address-city">Stad:</label>
        <input
          type="text"
          id="address-city"
          class="form-control"
          placeholder="Stad"
          required
        />
        <label for="address-zip">Postnummer:</label>
        <input
          type="text"
          id="address-zip"
          class="form-control"
          placeholder="Postnummer"
          required
        />
        <label for="address-country">Land:</label>
        <select id="address-country" class="form-control" required>
          <option value="SE">Sverige</option>
          <!-- Lägg till andra länder här om nödvändigt -->
        </select>
      </form>
    </div>

    <!-- Kortbetalning -->
    <div id="card-element">
      <!-- Stripe Elements kortinmatning här -->
    </div>
    <div id="card-errors" class="error" role="alert"></div>
    <button id="submit" class="btn">Betala</button>

    <!-- Loading Indicator -->
    <div class="loading" style="display: none;">
      <img src="/animations/loading.gif" alt="Loading..." />
      <p>Bearbetar betalning...</p>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    const stripe = Stripe(
      "pk_test_51QXro9GEVnY4b4YPAIRxLX8BxeXHEnzmuQiII0jX9u15IU8JFgN02owEuYrbA2zqrQz0x9kHvVAMumHPvvbs9kEo003q2zvx9A" // Din Stripe public key
    );
    const elements = stripe.elements();

    // Skapa Stripe Elements card
    const cardElement = elements.create("card", {
      style: {
        base: {
          color: "#32325d",
          fontFamily: "Roboto, sans-serif",
          fontSize: "16px",
          "::placeholder": { color: "#aab7c4" },
        },
        invalid: { color: "#fa755a" },
      },
    });
    cardElement.mount("#card-element");

    // Hantera event för felmeddelanden
    cardElement.on("change", function (event) {
      const displayError = document.getElementById("card-errors");
      if (event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = "";
      }
    });

    const jwtToken = localStorage.getItem("jwt");

    if (!jwtToken) {
      console.log("ingen token");
      window.location.href = "/login";
      return;
    }

    const tierName = localStorage.getItem("tier_name");
    const tierPrice = localStorage.getItem("tier_price");

    // Visa produktinformation
    if (tierName && tierPrice) {
      document.getElementById("tier-name").textContent = tierName;
      document.getElementById("tier-price").textContent = tierPrice;
    } else {
      alert("Ingen betalningsinformation hittades.");
      window.location.href = "/abonemang";
      return;
    }

    console.log("Tier Name:", tierName); // Kontrollera om detta är korrekt
    console.log("Tier Price:", tierPrice);

    // Hantera betalning
    document
      .getElementById("submit")
      .addEventListener("click", async function () {
        const userName = document.getElementById("name-input").value;
        const email = document.getElementById("email").value;

        // Hämta faktureringsadressen
        const addressLine1 = document.getElementById("address-line1").value;
        const city = document.getElementById("address-city").value;
        const zip = document.getElementById("address-zip").value;
        const country = document.getElementById("address-country").value;

        // Validera e-postadress
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!email || !emailPattern.test(email)) {
          alert("Vänligen ange en giltig e-postadress.");
          return;
        }

        // Skicka begäran till servern för att få client_secret
        const response = await fetch("http://127.0.0.1:5000/secret_key", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${jwtToken}`, // Om JWT-token används för autentisering
          },
          body: JSON.stringify({
            tierPrice: tierPrice,
            customerName: userName,
            customerEmail: email,
          }),
        });

        const result = await response.json();
        console.log(result);
        if (!result) {
          return;
        }

        // Hämta client_secret och andra betalningsdetaljer från servern
        const clientSecret = result["client_secret"];

        const loadingIndicator = document.querySelector(".loading");
        loadingIndicator.style.display = "block";

        try {
          // Skicka betalningsbegäran via Stripe API
          const { error, paymentIntent } = await stripe.confirmCardPayment(
            clientSecret,
            {
              payment_method: {
                card: cardElement,
                billing_details: {
                  email: email, // Användarens e-postadress
                  name: userName, // Användarens namn
                  address: {
                    line1: addressLine1, // Gatuadress
                    city: city, // Stad
                    postal_code: zip, // Postnummer
                    country: country, // Land
                  },
                },
              },
            }
          );

          if (error) {
            displayErrorMessage(error.message);
          } else if (paymentIntent.status === "succeeded") {
            window.location.href = "/success"; // Omdirigera till framgångssidan
          }
        } catch (error) {
          displayErrorMessage(
            "Något gick fel under betalningsprocessen. Vänligen försök igen."
          );
        } finally {
          loadingIndicator.style.display = "none";
        }
      });

    // Funktion för att visa felmeddelande
    function displayErrorMessage(message) {
      const displayError = document.getElementById("card-errors");
      displayError.textContent = message;
    }
  });
</script>

<style>
  .container {
    max-width: 600px;
    margin: 50px auto;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    background-color: var(--gra);
  }
  h1,
  h2,
  h3 {
    text-align: center;
    color: wheat;
  }
  .summary {
    text-align: left;
    margin-bottom: 20px;
  }
  .summary p {
    font-size: 16px;
    margin: 5px 0;
    color: whitesmoke;
  }
  #card-element {
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 4px;
    background: #f9f9f9;
  }
  .error {
    color: red;
    font-size: 14px;
    margin-top: 10px;
  }
  .btn {
    display: block;
    width: 100%;
    color: var(--guld);
    text-align: center;
    padding: 10px;
    font-size: 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-top: 20px;
  }
  .btn:hover {
    background: black;
  }
  .loading {
    display: none;
    text-align: center;
    margin-top: 10px;
  }
  .loading img {
    width: 50px;
  }
  .form-group {
    margin-bottom: 15px;
  }
  .form-control {
    width: 96%;
    padding: 10px;
    margin-top: 5px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  form {
    position: relative;
    margin-top: var(--margin-m);
    margin-bottom: var(--margin-m);
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    height: fit-content;

    input,
    select {
      width: 95% !important;
      margin: 0 auto;
    }
  }
</style>
